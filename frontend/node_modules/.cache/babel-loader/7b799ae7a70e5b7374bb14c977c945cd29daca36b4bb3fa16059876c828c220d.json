{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js\",\n  _s = $RefreshSig$();\n// CommentFormPage.js\nimport React, { useState, useEffect } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormPage = () => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [selectedTrackIndex, setSelectedTrackIndex] = useState('');\n  const [tracks, setTracks] = useState([]);\n\n  // Fetch the tracks from the backend when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:8000/home/api/tracks_info').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Tracks fetched:', data); // Add this line to log the fetched data\n      setTracks(data);\n      if (data.length > 0) {\n        setSelectedTrackIndex(data[0].id);\n      }\n    }).catch(error => {\n      console.error('Failed to fetch tracks:', error);\n    });\n  }, []);\n\n  // Handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n      submitComment(trackUri, comment).then(data => {\n        console.log(data);\n        setComment(''); // Clear comment field on success\n        // Further actions on success like showing a success message\n      }).catch(error => {\n        console.error('Failed to submit comment:', error);\n        // Further actions on failure like showing an error message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"track-select\",\n          children: [\"Track:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTrackIndex,\n            onChange: e => setSelectedTrackIndex(e.target.value),\n            required: true,\n            children: tracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: index,\n              children: track.name\n            }, track.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentFormPage, \"Bd4PO6Dc4RUV71GwTYG0sRqBqLQ=\");\n_c = CommentFormPage;\nexport default CommentFormPage;\nvar _c;\n$RefreshReg$(_c, \"CommentFormPage\");","map":{"version":3,"names":["React","useState","useEffect","submitComment","jsxDEV","_jsxDEV","CommentFormPage","_s","comment","setComment","selectedTrackIndex","setSelectedTrackIndex","tracks","setTracks","fetch","then","response","ok","Error","json","data","console","log","length","id","catch","error","handleSubmit","event","preventDefault","trackUri","track_uri","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","e","target","required","map","track","index","name","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js"],"sourcesContent":["// CommentFormPage.js\nimport React, { useState, useEffect } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\n\nconst CommentFormPage = () => {\nconst [comment, setComment] = useState('');\nconst [selectedTrackIndex, setSelectedTrackIndex] = useState('');\nconst [tracks, setTracks] = useState([]);\n\n  // Fetch the tracks from the backend when the component mounts\nuseEffect(() => {\n    fetch('http://localhost:8000/home/api/tracks_info')\n    .then(response => {\n        if (!response.ok) {\n        throw new Error('Network response was not ok');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log('Tracks fetched:', data); // Add this line to log the fetched data\n        setTracks(data);\n        if (data.length > 0) {\n        setSelectedTrackIndex(data[0].id);\n        }\n    })\n    .catch(error => {\n        console.error('Failed to fetch tracks:', error);\n    });\n}, []);\n\n  // Handle the form submission\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n    submitComment(trackUri, comment)\n        .then(data => {\n          console.log(data);\n          setComment(''); // Clear comment field on success\n          // Further actions on success like showing a success message\n        })\n        .catch(error => {\n          console.error('Failed to submit comment:', error);\n          // Further actions on failure like showing an error message\n        });\n    }\n  };\n\nreturn (\n    <div className=\"comment-form-page\">\n    <h2>Leave a Comment</h2>\n    <form onSubmit={handleSubmit} className=\"comment-form\">\n        <div className=\"form-group\">\n        <label htmlFor=\"comment\">\n            Comment:\n            <input\n            type=\"text\"\n            value={comment}\n            onChange={e => setComment(e.target.value)}\n            required\n            />\n        </label>\n        </div>\n        <div className=\"form-group\">\n        <label htmlFor=\"track-select\">\n            Track:\n            <select\n            value={selectedTrackIndex}\n            onChange={e => setSelectedTrackIndex(e.target.value)}\n            required\n            >\n            {tracks.map((track, index) => (\n                <option key={track.id} value={index}>\n                {track.name}\n                </option>\n            ))}\n            </select>\n        </label>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Submit Comment</button>\n    </form>\n    </div>\n);\n};\n\nexport default CommentFormPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}