{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js\",\n  _s = $RefreshSig$();\n// CommentFormPage.js\nimport React, { useState } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormPage = ({\n  tracks\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [selectedTrackIndex, setSelectedTrackIndex] = useState(0);\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitComment(selectedTrackIndex, comment).then(data => console.log(data)).catch(error => console.error(error));\n    // todo: we would likely want to do something after the comment is submitted,\n    // like showing a success message, clearing the form, or redirecting again.. \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-pag\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentFormPage, \"izpKisIRsaUOuiKPUska4tTUkxE=\");\n_c = CommentFormPage;\nexport default CommentFormPage;\nvar _c;\n$RefreshReg$(_c, \"CommentFormPage\");","map":{"version":3,"names":["React","useState","submitComment","jsxDEV","_jsxDEV","CommentFormPage","tracks","_s","comment","setComment","selectedTrackIndex","setSelectedTrackIndex","handleSubmit","event","preventDefault","then","data","console","log","catch","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js"],"sourcesContent":["// CommentFormPage.js\nimport React, { useState } from 'react';\nimport { submitComment } from './front-back-end-link';\n\nconst CommentFormPage = ({ tracks }) => {\nconst [comment, setComment] = useState('');\nconst [selectedTrackIndex, setSelectedTrackIndex] = useState(0);\n\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    submitComment(selectedTrackIndex, comment)\n    .then(data => console.log(data))\n    .catch(error => console.error(error));\n    // todo: we would likely want to do something after the comment is submitted,\n    // like showing a success message, clearing the form, or redirecting again.. \n};\n\nreturn (\n    <div className = \"comment-form-pag\">\n        <form onSubmit={handleSubmit}>\n            {/* ... form fields ... */}\n        </form>\n    </div>\n);\n};\n\nexport default CommentFormPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE/D,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBZ,aAAa,CAACQ,kBAAkB,EAAEF,OAAO,CAAC,CACzCO,IAAI,CAACC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;IACrC;IACA;EACJ,CAAC;;EAED,oBACIhB,OAAA;IAAKiB,SAAS,EAAG,kBAAkB;IAAAC,QAAA,eAC/BlB,OAAA;MAAMmB,QAAQ,EAAEX;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpB,EAAA,CApBIF,eAAe;AAAAuB,EAAA,GAAfvB,eAAe;AAsBrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}