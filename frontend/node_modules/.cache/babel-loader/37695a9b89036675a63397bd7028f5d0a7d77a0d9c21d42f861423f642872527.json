{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js\",\n  _s = $RefreshSig$();\n// CommentFormPage.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormPage = () => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [selectedTrackIndex, setSelectedTrackIndex] = useState('');\n  const [tracks, setTracks] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Fetch the tracks from the backend when the component mounts\n  useEffect(() => {\n    setIsLoading(true);\n    // Fetch both the tracks and comments when the component mounts\n    Promise.all([fetch('http://localhost:8000/home/api/tracks_info'), fetch('http://localhost:8000/home/api/comments')]).then(async ([tracksResponse, commentsResponse]) => {\n      if (!tracksResponse.ok || !commentsResponse.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const tracksData = await tracksResponse.json();\n      const commentsData = await commentsResponse.json();\n      setTracks(tracksData);\n      setComments(commentsData);\n      if (tracksData.length > 0) {\n        setSelectedTrackIndex(tracksData[0].track_uri);\n      }\n    }).catch(error => {\n      console.error('Failed to fetch data:', error);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n\n  // Handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n      submitComment(tracks[selectedTrackIndex].track_uri, comment).then(data => {\n        console.log(data);\n        setComment(''); // Clear comment field on success\n        // Further actions on success like showing a success message\n      }).catch(error => {\n        console.error('Failed to submit comment:', error);\n        // Further actions on failure like showing an error message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            placeholder: \"I love this song! \\uD83D\\uDE04\" // This is where you set the placeholder text\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"track-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Song Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this) // Loading indicator\n          : /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"track-select\",\n            value: selectedTrackIndex,\n            onChange: e => setSelectedTrackIndex(e.target.value),\n            required: true,\n            children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: track.track_uri,\n              children: track.track_name\n            }, track.track_uri, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentFormPage, \"BfFLnpq4GzdfIyACF0oFDCKqFWM=\");\n_c = CommentFormPage;\nexport default CommentFormPage;\nvar _c;\n$RefreshReg$(_c, \"CommentFormPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","submitComment","jsxDEV","_jsxDEV","CommentFormPage","_s","comment","setComment","selectedTrackIndex","setSelectedTrackIndex","tracks","setTracks","comments","setComments","isLoading","setIsLoading","Promise","all","fetch","then","tracksResponse","commentsResponse","ok","Error","tracksData","json","commentsData","length","track_uri","catch","error","console","finally","handleSubmit","event","preventDefault","trackUri","data","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","value","onChange","e","target","placeholder","required","map","track","track_name","type","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js"],"sourcesContent":["// CommentFormPage.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\n\nconst CommentFormPage = () => {\nconst [comment, setComment] = useState('');\nconst [selectedTrackIndex, setSelectedTrackIndex] = useState('');\nconst [tracks, setTracks] = useState([]);\nconst [comments, setComments] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\n\n\n  // Fetch the tracks from the backend when the component mounts\n  useEffect(() => {\n    setIsLoading(true);\n    // Fetch both the tracks and comments when the component mounts\n    Promise.all([\n      fetch('http://localhost:8000/home/api/tracks_info'),\n      fetch('http://localhost:8000/home/api/comments')\n    ])\n    .then(async ([tracksResponse, commentsResponse]) => {\n      if (!tracksResponse.ok || !commentsResponse.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const tracksData = await tracksResponse.json();\n      const commentsData = await commentsResponse.json();\n      setTracks(tracksData);\n      setComments(commentsData);\n      if (tracksData.length > 0) {\n        setSelectedTrackIndex(tracksData[0].track_uri);\n      }\n    })\n    .catch(error => {\n      console.error('Failed to fetch data:', error);\n    })\n    .finally(() => {\n      setIsLoading(false);\n    });\n  }, []);\n  \n\n  // Handle the form submission\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n        submitComment(tracks[selectedTrackIndex].track_uri, comment)\n        .then(data => {\n        console.log(data);\n          setComment(''); // Clear comment field on success\n          // Further actions on success like showing a success message\n        })\n        .catch(error => {\n        console.error('Failed to submit comment:', error);\n          // Further actions on failure like showing an error message\n        });\n    }\n};\n\nreturn (\n    <div className=\"comment-form-page\">\n      <h2>Leave a Comment</h2>\n      <form onSubmit={handleSubmit} className=\"comment-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"comment\">\n            <textarea\n            id=\"comment\"\n            value={comment}\n            onChange={e => setComment(e.target.value)}\n            placeholder=\"I love this song! &#128516;\" // This is where you set the placeholder text\n            required\n            />\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"track-select\">\n            <b>Song Name:</b>\n            {isLoading ? (\n              <div>Loading...</div> // Loading indicator\n            ) : (\n              <select\n                id=\"track-select\"\n                value={selectedTrackIndex}\n                onChange={e => setSelectedTrackIndex(e.target.value)}\n                required\n              >\n                {tracks.map((track) => (\n                  <option key={track.track_uri} value={track.track_uri}>\n                    {track.track_name}\n                  </option>\n                ))}\n              </select>\n            )}\n          </label>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Submit Comment</button>\n      </form>\n    </div>\n  );\n  \n};\n\nexport default CommentFormPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}