{"ast":null,"code":"var _jsxFileName = \"/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js\",\n  _s = $RefreshSig$();\n// CommentFormPage.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentFormPage = () => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [selectedTrackIndex, setSelectedTrackIndex] = useState('');\n  const [tracks, setTracks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const trackOptions = useMemo(() => tracks.map(track => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: track.track_uri,\n    children: track.track_name\n  }, track.track_uri, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)), [tracks]);\n\n  // Fetch the tracks from the backend when the component mounts\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('http://localhost:8000/home/api/tracks_info').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Tracks fetched:', data); // Log the fetched data\n      setTracks(data);\n      if (data.length > 0) {\n        setSelectedTrackIndex(data[0].id); // Assume the id is the correct value for selectedTrackIndex\n      }\n    }).catch(error => {\n      console.error('Failed to fetch tracks:', error);\n    }).finally(() => {\n      setIsLoading(false); // This will be executed after the promise is either fulfilled or rejected\n    });\n  }, []);\n\n  // Handle the form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n      submitComment(tracks[selectedTrackIndex].track_uri, comment).then(data => {\n        console.log(data);\n        setComment(''); // Clear comment field on success\n        // Further actions on success like showing a success message\n      }).catch(error => {\n        console.error('Failed to submit comment:', error);\n        // Further actions on failure like showing an error message\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment-form-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Leave a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"comment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          children: [\"Comment:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"comment\",\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            placeholder: \"Comment\" // This is where you set the placeholder text\n            ,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"track-select\",\n          children: [\"Track:\", isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this) // Loading indicator\n          : /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"track-select\",\n            value: selectedTrackIndex,\n            onChange: e => setSelectedTrackIndex(e.target.value),\n            required: true,\n            children: tracks.map(track => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: track.track_uri,\n              children: track.track_name\n            }, track.track_uri, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentFormPage, \"5NUU1Wt0nsCw7DzSFnszi3ehYfs=\");\n_c = CommentFormPage;\nexport default CommentFormPage;\nvar _c;\n$RefreshReg$(_c, \"CommentFormPage\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","submitComment","jsxDEV","_jsxDEV","CommentFormPage","_s","comment","setComment","selectedTrackIndex","setSelectedTrackIndex","tracks","setTracks","isLoading","setIsLoading","trackOptions","map","track","value","track_uri","children","track_name","fileName","_jsxFileName","lineNumber","columnNumber","fetch","then","response","ok","Error","json","data","console","log","length","id","catch","error","finally","handleSubmit","event","preventDefault","trackUri","className","onSubmit","htmlFor","onChange","e","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/home/Desktop/Workspace/HTML-CSS-JS-Projects/lyric_link/frontend/src/CommentFormPage.js"],"sourcesContent":["// CommentFormPage.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { submitComment } from './front-back-end-link';\nimport './CommentFormPage.css';\n\nconst CommentFormPage = () => {\nconst [comment, setComment] = useState('');\nconst [selectedTrackIndex, setSelectedTrackIndex] = useState('');\nconst [tracks, setTracks] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\nconst trackOptions = useMemo(() => tracks.map(track => (\n    <option key={track.track_uri} value={track.track_uri}>\n      {track.track_name}\n    </option>\n  )), [tracks]);\n  \n\n  // Fetch the tracks from the backend when the component mounts\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('http://localhost:8000/home/api/tracks_info')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Tracks fetched:', data); // Log the fetched data\n        setTracks(data);\n        if (data.length > 0) {\n          setSelectedTrackIndex(data[0].id); // Assume the id is the correct value for selectedTrackIndex\n        }\n      })\n      .catch(error => {\n        console.error('Failed to fetch tracks:', error);\n      })\n      .finally(() => {\n        setIsLoading(false); // This will be executed after the promise is either fulfilled or rejected\n      });\n  }, []);\n  \n\n  // Handle the form submission\nconst handleSubmit = (event) => {\n    event.preventDefault();\n    // Find the track object by index, then use its track_uri to submit\n    const trackUri = tracks[selectedTrackIndex] ? tracks[selectedTrackIndex].track_uri : null;\n    if (trackUri) {\n        submitComment(tracks[selectedTrackIndex].track_uri, comment)\n        .then(data => {\n        console.log(data);\n          setComment(''); // Clear comment field on success\n          // Further actions on success like showing a success message\n        })\n        .catch(error => {\n        console.error('Failed to submit comment:', error);\n          // Further actions on failure like showing an error message\n        });\n    }\n};\n\nreturn (\n    <div className=\"comment-form-page\">\n      <h2>Leave a Comment</h2>\n      <form onSubmit={handleSubmit} className=\"comment-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"comment\">\n            Comment:\n            <textarea\n    id=\"comment\"\n    value={comment}\n    onChange={e => setComment(e.target.value)}\n    placeholder=\"Comment\" // This is where you set the placeholder text\n    required\n    />\n\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"track-select\">\n            Track:\n            {isLoading ? (\n              <div>Loading...</div> // Loading indicator\n            ) : (\n              <select\n                id=\"track-select\"\n                value={selectedTrackIndex}\n                onChange={e => setSelectedTrackIndex(e.target.value)}\n                required\n              >\n                {tracks.map((track) => (\n                  <option key={track.track_uri} value={track.track_uri}>\n                    {track.track_name}\n                  </option>\n                ))}\n              </select>\n            )}\n          </label>\n        </div>\n        <button type=\"submit\" className=\"submit-button\">Submit Comment</button>\n      </form>\n    </div>\n  );\n  \n};\n\nexport default CommentFormPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}